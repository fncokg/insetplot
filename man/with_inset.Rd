% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/with_inset.R
\name{with_inset}
\alias{with_inset}
\title{Create Inset Plots with Spatial Data}
\usage{
with_inset(
  plot_expr,
  .cfg = last_insetcfg(),
  .return_subplots = FALSE,
  .as_is = FALSE
)
}
\arguments{
\item{plot_expr}{Code for map visualization.
This should be an expression that generates a ggplot object using the spatial data objects configured in \code{\link[=config_insetmap]{config_insetmap()}}.}

\item{.cfg}{An inset configuration object. If NULL, uses the last configuration
set by \code{\link[=config_insetmap]{config_insetmap()}}. Default is \code{\link[=last_insetcfg]{last_insetcfg()}}.}

\item{.return_subplots}{Logical. If TRUE, returns a list with both the combined
plot and individual subplots. Default is FALSE.}

\item{.as_is}{Logical. If TRUE, returns the plot expression as-is without
creating insets. Useful for debugging and code reuse. Default is FALSE.}
}
\value{
If \code{.return_subplots} is FALSE, returns a cowplot drawing canvas object
(which inherits from ggplot) containing the combined main plot and insets.
If TRUE, returns a list with components:
\item{full}{The combined plot (cowplot canvas)}
\item{subplots}{A list of individual subplot objects}
}
\description{
Evaluates a plot expression using configured spatial data and plot specifications
to create a combined visualization with main plot and inset plots.
}
\details{
This function works by:
\enumerate{
\item Cropping the spatial data according to each plot specification's bounding box
\item Evaluating the plot expression in an environment containing the cropped data
\item Adding coordinate systems and borders as specified
\item Combining all plots using cowplot
}

The spatial data objects are made available in the plot expression environment
using the names specified when configuring the inset map.
}
\note{
The best display of the inset map is achieved only when the output image
is saved with a width-height ratio that matches the \code{full_ratio} specified
in \code{\link[=config_insetmap]{config_insetmap()}}. Therefore, plots displayed in RStudio or other viewers
may not accurately reflect the final output.
}
\examples{
\dontrun{
library(sf)
library(ggplot2)

# Load spatial data
nc <- sf::st_read(system.file("shape/nc.shp", package = "sf"))

# Configure inset map
config_insetmap(
    plot_data = nc,
    specs = list(
        plot_spec(main = TRUE),
        plot_spec(
            xmin = -84, xmax = -75, ymin = 33, ymax = 37,
            loc_left = 0.7, loc_bottom = 0.7,
            width = 0.3
        )
    )
)

# Create inset plot
with_inset({
    ggplot(nc) +
        geom_sf(aes(fill = AREA)) +
        theme_void()
})
}

}
\seealso{
\code{\link[=config_insetmap]{config_insetmap()}}, \code{\link[=plot_spec]{plot_spec()}}, \code{\link[=last_insetcfg]{last_insetcfg()}}
}
